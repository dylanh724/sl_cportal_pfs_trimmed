# $Id$

# Defaults settings for the build scripts.
# NOTE: There should be NO NEED to edit this file directly!
# Instead, create a file build.conf with your own overrides.

export CVSDIR=${CVSDIR:-/home/pfsense}         # local cvs checkout dir
export CVSMODULE=${CVSMODULE:-installer}               # cvs module name

export TMPDIR=${TMPDIR:-/tmp}                          # dir for temp files
export NRELEASEDIR=${NRELEASEDIR:-/usr/src/nrelease}   # where 'nrelease' lives
export PORTSDIR=${PORTSDIR:-/usr/ports}                # system ports dir
export DISTFILESDIR=${DISTFILESDIR:-${PORTSDIR}/distfiles} # distfiles dir
export PACKAGESDIR=${PACKAGESDIR:-${PORTSDIR}/packages/All} # pkgs dir
export ISOROOT=${ISOROOT:-/usr/release/root}           # root of ISO-to-be tree
export PORTS_FLAGS=${PORTS_FLAGS:-}                    # additional flags/vars

export REMOVEOLDPKGS=${REMOVEOLDPKGS:-YES}             # Remove old non-RELEASEBUILD
export REMOVEOLDDISTFILES=${REMOVEOLDDISTFILES:-YES}   # pkgs/dstfls when making new
export RELEASEBUILD=${RELEASEBUILD:-NO}                # NO = tack date on pkg vers
export ROOTSKEL=${ROOTSKEL:-${NRELEASEDIR}/installer}  # default installer skeleton
export EXTRA_ROOTSKELS=${EXTRA_ROOTSKELS:-}            # extra root skeletons

export INSTALL_DFUIFE_QT=${INSTALL_DFUIFE_QT:-NO}      # build & install Qt frontend
export INSTALL_DFUIBE_LUA=${INSTALL_DFUIBE_LUA:-YES}   # build & install Lua backend
export INSTALL_DFUIBE_INSTALLER=${INSTALL_DFUIBE_INSTALLER:-NO} # ditto C backend

export WITH_NLS=NO                        # build pkgs with i18n
export WITH_X11=${WITH_X11:-NO}                        # build X11 support pkgs
export WITH_DEBUG_INFO=${WITH_DEBUG_INFO:-NO}          # leave debug info in binaries
export WITH_DEBUG=${WITH_DEBUG:-NO}                    # build debug-enabled pkgs

export ONE_BIG_PKG=${ONE_BIG_PKG:-YES}                 # build & install one big pkg?

